import pandas as pd
import os

num_threads_per_reco_job = 40
tot_events = 1000
run_num=[2899]

GCData='/mnt/spirit/analysis/user/tsangc/SpiRITROOT/Picked_run_2899/gainCalibration_groundPlane_120fC_117ns_20160509.root'
GGData='/mnt/spirit/analysis/user/tsangc/SpiRITROOT/Picked_run_2899/ggNoise_2842.root'
SupplePath='/mnt/spirit/rawdata/misc/rawdataSupplement'
ParameterFile='ST.parameters.PhysicsRuns_201707.par'

"""
Don't modify anything below
"""

localrules: all

vmc_dir = os.environ['VMCWORKDIR']
with open(vmc_dir + '/VERSION.compiled', 'r') as f:
  spiritroot_ver = f.read().rstrip()

rule all:
  input:
    expand('{VMCDIR}/macros/data/{filename}/run{run_num}_s{id}.reco.{version}.root', 
            VMCDIR=vmc_dir, filename='FindVertexNewVelSn132', run_num=run_num, id=['%d' % job for job in range(num_threads_per_reco_job)], version=spiritroot_ver)

rule run_onlyreco:
  output:
    expand('{VMCDIR}/macros/data/{{filename}}/run{{run_num}}_s{{id}}.reco.{version}.root', VMCDIR=vmc_dir, version=spiritroot_ver)
  resources:
    cpu=1
  params:
    threads = num_threads_per_reco_job-1,
    ntotal = tot_events,
    nsplit = int((tot_events + num_threads_per_reco_job -1)/num_threads_per_reco_job),
    parGCData = GCData,
    parGGData = GGData,
    parSupplePath = SupplePath,
    parParameterFile = ParameterFile,
    output_path = lambda wildcards: vmc_dir + '/macros/data/' + str(wildcards.filename) + '/',
    log_dir = os.path.join(vmc_dir, 'macros', 'log'),
    num_id = lambda wildcards: int(str(wildcards.id)),
  shell:
    """
    i={params.num_id}
    LOGDIR={params.log_dir}/{wildcards.filename}_run{wildcards.run_num}_id{wildcards.id}
    root.exe -b -q -l 'run_reco_experiment.C({wildcards.run_num},{params.ntotal},'$i',{params.nsplit},"{params.parGCData}","{params.parGGData}",{{}},"","{params.parSupplePath}",30,"{params.parParameterFile}","{params.output_path}",kTRUE,26.04,-1.399,-205.5,0,-1,kTRUE)' > ${{LOGDIR}}_${{i}}_reco.log
    """
